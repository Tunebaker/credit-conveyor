openapi: 3.0.3
info:
  title: Кредитный конвейер - OpenAPI 3.0
  description: Кредитный Конвейер. Цель проекта - реализовать бэкенд-приложение с микросервисной архитектурой - прототип небольшого банка
  contact:
    name: Андрей Гуринов
    email: tunebaker@gmail.com
  version: 1.0.11
servers:
  - url: https://localhost:8081/

tags:
  - name: deal
    description: Микросервис Сделка
  - name: documents
    description: Операции с документами клиента

paths:
  /deal/application:
    post:
      tags:
        - deal
      summary: Расчёт возможных условий кредита
      operationId: getLoanOfferDTOs
      description: расчёт возможных условий кредита
      requestBody:
        required: true
        description: расчёт возможных условий кредита
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanOfferDTO'
        '400':
          description: Invalid input
  /deal/offer:
    put:
      tags:
        - deal
      summary: Выбор одного из предложений
      operationId: chooseOffer
      description: Выбор одного из предложений
      requestBody:
        required: true
        description: Выбор одного из предложений
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanOfferDTO'
      responses:
        default:
          description: Successful operation

  /deal/calculate/{applicationId}:
    put:
      tags:
        - deal
      summary: завершение регистрации, полный подсчёт кредита
      operationId: finishRegistration
      description: завершение регистрации, полный подсчёт кредита
      parameters:
        - name: applicationId
          in: path
          description: applicationId идентификационный номер заявки
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: завершение регистрации, полный подсчёт кредита
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishRegistrationRequestDTO'
      responses:
        default:
          description: Successful operation
        '400':
          description: Invalid input

  /deal/document/{applicationId}/send:
    put:
      tags:
        - documents
      summary: запрос на отправку документов
      operationId: sendDocuments
      description: запрос на отправку документов
      parameters:
        - name: applicationId
          in: path
          description: applicationId идентификационный номер заявки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Successful operation
        '400':
          description: Invalid input

  /deal/document/{applicationId}/sign:
    put:
      tags:
        - documents
      summary: запрос на подписание документов
      operationId: signDocuments
      description: запрос на подписание документов
      parameters:
        - name: applicationId
          in: path
          description: applicationId идентификационный номер заявки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Successful operation
        '400':
          description: Invalid input

  /deal/document/{applicationId}/code:
    put:
      tags:
        - documents
      summary: подписание документов
      operationId: verifySesCode
      description: подписание документов
      parameters:
        - name: applicationId
          in: path
          description: applicationId идентификационный номер заявки
          required: true
          schema:
            type: integer
            format: int64
        - name: ses-code
          in: header
          description: код ПЭП
          required: true
          schema:
            type: integer
            format: int32

      responses:
        default:
          description: Successful operation
        '400':
          description: Invalid input

components:
  schemas:
    CreditDTO:
      type: object
      description: Параметры кредита после скоринга
      properties:
        amount:
          type: number
          description: Сумма кредита
          format: double
          example: 200000.0
        term:
          type: integer
          description: Продолжительность выплаты кредита в месяцах
          format: int32
          example: 36
        monthlyPayment:
          type: number
          description: Ежемесячный платёж
          format: double
          example: 2000.0
        rate:
          type: number
          description: Годовая ставка кредита в процентах
          format: double
          example: 7.6
        psk:
          type: number
          description: Полная стоимость кредита в процентах
          format: double
          example: 7.6
        isInsuranceEnabled:
          type: boolean
          description: Страховка включена
        isSalaryClient:
          type: boolean
          description: Зарплатный клиент
        paymentSchedule:
          type: array
          items:
            $ref: '#/components/schemas/PaymentScheduleElement'

    PaymentScheduleElement:
      type: object
      description: Регулярный платёж
      properties:
        number:
          type: integer
          description: Порядковый номер выплаты
          format: int32
          example: 1
        date:
          type: string
          description: Дата выплаты
          format: date
          example: 2023-08-01
        totalPayment:
          type: number
          format: double
          example: 7000.0
          description: Сумма выплаты
        interestPayment:
          type: number
          description: Сумма выплаты процентов
          format: double
          example: 3000.0
        debtPayment:
          type: number
          description: Сумма выплаты основного долга
          format: double
          example: 4000.0
        remainingDebt:
          type: number
          description: Остаток долга
          format: double
          example: 287421.75
    EmploymentDTO:
      type: object
      description: Данные о занятости заемщика
      properties:
        employmentStatus:
          type: string
          description: Статус занятости
          enum:
            [ EMPLOYED,
              UNEMPLOYED,
              SELF_EMPLOYED,
              BUSINESS_OWNER ]
          example: EMPLOYED
        employerINN:
          type: string
          description: ИНН
          format: string
          example: 124512457845
        salary:
          type: number
          description: Заработная плата за месяц
          format: double
          example: 15000.0
        position:
          type: string
          description: Должность
          enum:
            [ ORDINARY_WORKER,
              MIDDLE_MANAGER,
              TOP_MANAGER ]
          example: ORDINARY_WORKER
        workExperienceTotal:
          type: integer
          description: Общий стаж работы в месяцах
          format: int32
          example: 100
        workExperienceCurrent:
          type: integer
          description: Стаж работы на текущем месте в месяцах
          format: int32
          example: 15
    LoanApplicationRequestDTO:
      type: object
      description: Первичный запрос на кредит
      properties:
        amount:
          type: number
          description: Желаемая сумма кредита
          format: double
          example: 15000.0
        term:
          type: integer
          description: Желаемый срок кредита в месяцах
          format: int32
          example: 12
        firstName:
          type: string
          description: Имя заемщика
          format: string
          example: Ivan
        lastName:
          type: string
          description: Фамилия заемщика
          format: string
          example: Ivanov
        middleName:
          type: string
          description: Отчество заемщика (при наличии)
          format: string
          example: Ivanovich
        email:
          type: string
          description: Email
          format: string
          example: qwe@rty.ru
        birthdate:
          type: string
          description: Дата рождения заемщика
          format: date
          example: 2000-05-09
        passportSeries:
          type: string
          description: Серия паспорта
          format: string
          example: 2003
        passportNumber:
          type: string
          description: Номер паспорта
          format: string
          example: 645979

    LoanOfferDTO:
      type: object
      description: Предварительное кредитное предложение
      properties:
        applicationId:
          type: integer
          description: Номер предложения
          format: int64
          example: 12
        requestedAmount:
          type: number
          description: Запрошенная сумма кредита
          format: double
          example: 200000.0
        totalAmount:
          type: number
          description: Рассчитанная сумма кредита с учетом страховки
          format: double
          example: 210000.0
        term:
          type: integer
          description: Продолжительность выплаты кредита в месяцах
          format: int32
          example: 36
        monthlyPayment:
          type: number
          description: Ежемесячный платёж
          format: double
          example: 1000.0
        rate:
          type: number
          description: Годовая ставка кредита
          format: double
          example: 13.5
        isInsuranceEnabled:
          type: boolean
          description: Страховка включена
        isSalaryClient:
          type: boolean
          description: Зарплатный клиент

    ScoringDataDTO:
      type: object
      description: Данные для окончательного расчёта параметров кредита
      properties:
        amount:
          type: number
          description: Сумма кредита с учетом страховки
          format: double
          example: 200000.0
        term:
          type: integer
          description: Продолжительность выплаты кредита в месяцах
          format: int32
          example: 36
        firstName:
          type: string
          description: Имя заемщика
          format: string
          example: Ivan
        lastName:
          type: string
          description: Фамилия заемщика
          format: string
          example: Ivanov
        middleName:
          type: string
          description: Отчество заемщика (при наличии)
          format: string
          example: Ivanovich
        gender:
          $ref: '#/components/schemas/Gender'
        birthdate:
          type: string
          description: Дата рождения заемщика
          format: date
          example: 2000-05-09
        passportSeries:
          type: string
          description: Серия паспорта
          format: string
          example: 2003
        passportNumber:
          type: string
          description: Номер паспорта
          format: string
          example: 645979
        passportIssueDate:
          type: string
          description: Дата выдачи паспорта
          format: date
          example: 2000-05-09
        passportIssueBranch:
          type: string
          description: Подразделение, выдавшее паспорт
          format: string
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        dependentAmount:
          type: integer
          description: Количество иждивенцев
          format: int32
          example: 1
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
          description: Номер счёта заемщика
          format: string
        isInsuranceEnabled:
          type: boolean
          description: Страховка включена
        isSalaryClient:
          type: boolean
          description: Зарплатный клиент

    FinishRegistrationRequestDTO:
      type: object
      description: Данные для окончательного расчёта параметров кредита
      properties:
        gender:
          $ref: '#/components/schemas/Gender'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        dependentAmount:
          type: integer
          description: Количество иждивенцев
          example: 1
        passportIssueDate:
          type: string
          description: Дата выдачи паспорта
          format: date
          example: 2000-05-09
        passportIssueBranch:
          type: string
          description: Подразделение, выдавшее паспорт
          format: string
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
          description: Номер счёта заемщика
          format: string

    ApplicationStatusHistoryDTO:
      type: object
      description: История статусов заявки
      properties:
        status:
          type: string
          description: Cтатус заявки
          enum:
            [ PREAPPROVAL,
              APPROVED,
              CC_DENIED,
              CC_APPROVED,
              PREPARE_DOCUMENTS,
              CLIENT_DENIED,
              DOCUMENT_SIGNED,
              CREDIT_ISSUED
            ]
          example: PREAPPROVAL
        time:
          type: string
          description: Время смены статуса
          format: datetime
        changeType:
          type: string
          description: Тип обновления статуса
          enum:
            [ AUTOMATIC,
              MANUAL ]
          example: AUTOMATIC

    EmailMessage:
      type: object
      description: Email сообщение клиенту
      properties:
        address:
          type: string
          description: Email адрес клиента
          format: string
        theme:
          $ref: '#/components/schemas/Theme'
        applicationId:
          type: integer
          description: applicationId идентификационный номер заявки
          format: int64

    Gender:
      type: string
      description: Пол
      enum:
        [ MALE,
          FEMALE,
          NON_BINARY ]
      example: MALE

    MaritalStatus:
      type: string
      description: Семейный статус
      enum:
        [ SINGLE,
          MARRIED,
          DIVORCED ]
      example: SINGLE

    CreditStatus:
      type: string
      description: Статус кредита
      enum:
        [ CALCULATED,
          ISSUED ]
      example: CALCULATED

    Theme:
      type: string
      description: Тема письма
      enum:
        [ FINISH_REGISTRATION,
          CREATE_DOCUMENTS,
          SEND_DOCUMENTS,
          SEND_SES,
          CREDIT_ISSUED,
          APPLICATION_DENIED ]
      example: FINISH_REGISTRATION


