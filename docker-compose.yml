version: '4.0'

services:
  gateway:
    image: tnbkr/gateway
    hostname: gateway
    container_name: gateway
    ports:
      - 8084:8084
    environment:
      - APPLICATION_URL=http://application:8082
      - DEAL_URL=http://deal:8081
    networks:
      - docker_network


  application:
    image: tnbkr/application
    hostname: application
    container_name: application
    environment:
      - DEAL_URL=http://deal:8081
    networks:
      - docker_network

  deal:
    image: tnbkr/deal
    hostname: deal
    container_name: deal
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://project-db-1:5432/postgres
      - CONVEYOR_URL=http://conveyor:8080/conveyor
    depends_on:
      - project-db-1
    networks:
      - docker_network

  project-db-1:
    image: postgres:14.7-alpine
    hostname: project-db-1
    container_name: project-db-1
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12
    ports:
      - "5432:5432"
    networks:
      - docker_network

  conveyor:
    image: tnbkr/conveyor
    hostname: conveyor
    container_name: conveyor
    networks:
    - docker_network

  dossier:
    image: tnbkr/dossier
    hostname: dossier
    container_name: dossier
    depends_on:
      - kafka1
    networks:
      - docker_network

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - docker_network

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "19092:19092"
    depends_on:
      - zoo1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - docker_network

networks:
  docker_network:
    driver: bridge


